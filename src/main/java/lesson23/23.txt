Урок 23: CRUD приложение. PATCH, DELETE запросы.

CRUD приложение - это приложение, которое позволяет
добавлять (CREATE), читать (READ), обновлять(UPDATE)
и удалять(DELETE) данные

Что уже сделано
READ
GET /people
GET /people/:id

CREATE
GET /people/new
POST /people

---

На этом уроке

UPDATE
Переход на страницу с формой обновления
GET /people/:id/edit

Обновление данных человека
PATCH /people/:id

Удаление человека
DELETE /people/:id

---

Деталь реализации PATCH, DELETE и других запросов

HTTP методы: GET, POST, PATCH, DELETE, PUT, ....
HTML 5 стандарт только GET, POST.
Остальные методы не поддерживаются

Как решается это проблема

PATCH, DELETE, PUT запросы передаются с помощью POST
Запроса, но в скрытом поле _method указывается желаемый
HTTP method.
Thymeleaf берет это на себя и сам создает эти методы

Пример:
.
<form method="post" action="/people/id">
    <input type="hidden" name="_method" value="patch">
...
.
Spring по скрытому полю поймет, что это patch
Реализуется это с помощью фильтра.

---

Фильтр - объект, который перехватывает все входящие HTTP
запросы (формы). В данном случае фильтр используется для того,
чтобы смотреть на значе поля _method в поступающих
HTTP запросах (если это поле есть)

На этом уроке подключим фильтр вручную. Когда перейдем на
Spring Boot, это будет делаться с помощью одной строки
в конфигурационном файле.

Практика

Открываем урок 21 и работаем там с контроллером
PeopleController (методы edit и update)

Также в представлениях edit.html

Также нам нужно создать фильтр,
который перенаправляет POST
запросы со скрытым полем PATCH
на метод, который обрабатывает
PATCH запросы
Открываем 16 урок
MySpringMvcDispatcherServletInitializer
и делаем там настройку








