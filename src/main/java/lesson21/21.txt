Урок 21: CRUD, REST, Паттерн DAO (Data Access Object)

CRUD - Create, Read, Update, Delete
Четыре базовых функции, используемые при работе
с базами данных
Чаще всего CRUD приложения являются Web-приложениями
То есть доступ к БД предоставляется через протокол
HTTP.
Клиент -> Post, Patch, Delete
Клиент <- Get
CRUD приложения - БД

---

Пример CRUD для сущности Post
(запись в какой-то соц. сети например)

Http метод      URL                 Действие
GET             /posts              Получаем все записи (READ)
POST            /posts              Создаем новую запись (CREATE)
GET             /posts/new          HTML форма создания записи
GET             /posts/:id/edit     HTML форма редактирования записи
GET             /posts/:id          Получаем одну запись (READ)
PATCH           /posts/:id          Обновляем запись(UPDATE)
DELETE          /posts/:id          Удаляем запись(DELETE)

--- СТАНДАРТ REST

REST - паттерн проектирования web-приложений
REST описывает то, как посредством протокола
HTTP протокола должен взаиможействовать
клиент с сервером
Все взаимодействие с сервером сводится к 4
операциям - получение данных, добавление
новых данных, изменение существующих данных,
удаление данных

Для каждой из 4 операций используется свой метод,
GET, POST, PATCH, DELETE

---

REST vs CRUD
Где-то пересекаются, но это разное
Связь между REST и CRUD

GET         /users          READ
GET         /users/:id      READ
POST        /users          CREATE
PATCH       /users/:id      UPDATE
DELETE      /users/:id      DELETE

---

Реализуем CRUD приложение для сущности Person
Реализуем операции READ
GET /people
GET /people/:id

---

Связь с БД
Паттерн DAO (Data Access Object)
Мы хотим вынести логигу взаимодействия с БД
в отдельный класс. Паттерн проектирования,
когда отдельный класс занимается взаимодействием
с БД для конкретной сущности называется DAO

Вся логика работы с БД для модели Person
инкапсулируется в класс PersonDAO

В DAO классах обычно пишется SQL код для
работы с БД приложения (чтение, запись,
обновление приложение)

---

Есть другой паттерн взаимодействия с БД -
репозиторий (repository). Его мы будем
изучать, когда дойдем до Hibernate и
Spring Data JPA. Этот паттерн предоставляет
большую абстракцию над БД, чем DAO

Переходим к практике - создаем контроллер
Меняем в конфиге 16 урока сканирование папок на 21

