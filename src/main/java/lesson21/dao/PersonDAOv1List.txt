package lesson21.dao;

import lesson21.models.Person;
import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.List;

/**
 * Урок 25.
 * этот файл оставляем для примера,
 * и даем новое расширение  txt
 *
 * ---
 *
 * Урок 24.
 * В связи с изменением основной модели Person
 * (добавления в неё полей) приходится поменятть и здесь
 *
 */
@Component
public class PersonDAO {
    private static int PEOPLE_COUNT;
    private List<Person> people;

    {
        people = new ArrayList<>();

        people.add(new Person(++PEOPLE_COUNT, "Tom", 24, "tom@mail.ru"));
        people.add(new Person(++PEOPLE_COUNT, "Bob", 52, "bob@mail.ru"));
        people.add(new Person(++PEOPLE_COUNT, "Mike", 18, "mike@yahoo.com"));
        people.add(new Person(++PEOPLE_COUNT, "Katy", 34, "katy@gmail.com"));
    }

    public List<Person> index() {
        return people;
    }

    public Person show(int id) {
        return people.stream()
                .filter(person -> person.getId() == id)
                .findAny().orElse(null);
    }

    public void save(Person person) {
        person.setId(++PEOPLE_COUNT);
        people.add(person);
    }

    /**
     * К уроку 23
     * добавили параметры в уроке 24
     */
    public void update(int id, Person updatedPerson) {
        Person personToBeUpdated = show(id);
        personToBeUpdated.setName(updatedPerson.getName());
        personToBeUpdated.setAge(updatedPerson.getAge());
        personToBeUpdated.setEmail(updatedPerson.getEmail());
    }

    /**
     * К уроку 23
     */
    public void delete(int id) {
        people.removeIf(p -> p.getId() == id);
    }
}

/*
 index() - вернуть весь список
 show(int id) - вернуть одного, если есть

 Помечаем класс как @Component, стобы иметь возможность
 воспользоваться Spring и внедрить его где нам надо,
 в данном случае подключить к контроллеру

 (проверить, что папка сканируется можно в конфиге 16 урока)

 */