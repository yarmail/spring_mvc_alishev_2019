Урок 17: Контроллеры. Аннотация @Controller.

Контроллер.
Обрабатывает запросы от пользователя
Обменивается данными с моделью
Показывет пользователю правильное представление
Переадресовывает пользователя на другие страницы

---

Аннотация @Controller помечает класс контроллер
Наследуется от аннотации @Component
Поэтому @ComponentScan работает с @Controller
так же как и просто с @Component
@Controller - тот же @Component, но с
дополнительными возможностями.
@Controller также создает бин.

---

В контроллере может быть несколько методов
Обычно, каждый метод соотвествует одному URL
Обычно методы возвращают String,
название представления, которое надо показать
пользователю
У метода может быть любое название

---

Маппинги

@GetMapping
@PostMapping
@PutMapping
@DeleteMapping
@PatchMapping

Иногда пишут устаревший вариант
@RequestMapping(method = RequestMethod.GET)

.
@Controller
public class HelloController {

    @GetMapping("/hello-world")
    public String sayHello() {
        return "hello_world";
    }
}
.

связывают метод контроллера с адресом, по которому можно обратиться
(из браузера, например)

Всего 5 разных видов маппинга, в зависимости от того,
какой HTTP запрос (с каким HTTP методом) должен прийти в этот
метод контроллера.

---

Также @RequestMapping может использоваться на классе

@RequestMapping(value = "new", method = RequestMethod.GET
public String newPerson (Model model) {}

-

Если я правильно понял, можно настроить групповой запрос:
@Controller
@RequestMapping("/people")
public class PersonController {}
Типа все URL адреса, имеющие в начале /people будут попадать сюда

---

Практика
Конфиги в 16 уроке, отуда дополнительно
подключаем нашу папку controllers
@ComponentScan ({"lesson16", "lesson17"})

Дописываем контроллеры и представления к ним





